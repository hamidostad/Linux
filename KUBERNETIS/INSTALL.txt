http://kb.cloudblue.com/en/132920

##Kubernetes installation Centos
1.
yum -y update

#if there were issue on downloading packages:
yum --enablerepo=updates clean metadata
yum clean all
yum clean dbcache
yum -y update
yum install -y curl wget net-tools bind-utils elinks
yum -y update
yum upgrade

___________________________________________________________

swapoff -a
vi /etc/fstab
init 6
___________________________________________________________

2. installing Docker and required packages:

sudo yum install -y yum-utils \
  device-mapper-persistent-data \
  lvm2
sudo yum-config-manager \
    --add-repo \
    https://download.docker.com/linux/centos/docker-ce.repo

sudo yum install -y docker-ce docker-ce-cli containerd.io

yum update -y

## Create /etc/docker directory.
mkdir /etc/docker

# Setup daemon.
cat > /etc/docker/daemon.json <<EOF
{
  "exec-opts": ["native.cgroupdriver=systemd"],
  "log-driver": "json-file",
  "log-opts": {
    "max-size": "100m"
  },
  "storage-driver": "overlay2",
  "storage-opts": [
    "overlay2.override_kernel_check=true"
  ]
}
EOF

mkdir -p /etc/systemd/system/docker.service.d

# Restart Docker
systemctl daemon-reload
systemctl restart docker
systemctl enable docker
___________________________________________________________

3. Configure Firewall
#master:
sudo firewall-cmd --permanent --add-port=6443/tcp
sudo firewall-cmd --permanent --add-port=2379-2380/tcp
sudo firewall-cmd --permanent --add-port=10250/tcp
sudo firewall-cmd --permanent --add-port=10251/tcp
sudo firewall-cmd --permanent --add-port=10252/tcp
sudo firewall-cmd --permanent --add-port=10255/tcp
sudo firewall-cmd --reload


#worker:
sudo firewall-cmd --permanent --add-port=10250/tcp
sudo firewall-cmd --permanent --add-port=10251/tcp
sudo firewall-cmd --permanent --add-port=10255/tcp
sudo firewall-cmd --permanent --add-port=6783/tcp
sudo firewall-cmd --permanent --add-port=30000-32767/tcp
firewall-cmd --reload

___________________________________________________________

4. set hosts file (on all master and nodes)
vi /etc/hosts

10.10.10.100 kubemaster
10.10.10.101 kubenode1
10.10.10.102 kubenode2

##set hostname
vi /etc/hostname

___________________________________________________________

##set static ip 
vi /etc/sysconfig/network-scripts/ifcfg-ens37
DEVICE="ens37"
HWADDR="00:0c:29:39:a5:55"
NM_CONTROLLED="no"
ONBOOT="yes"
BOOTPROTO="static"
IPADDR=10.10.10.101
NETMASK=255.255.255.0


___________________________________________________________

5.disable SElinux:
# Set SELinux in permissive mode (effectively disabling it)
setenforce 0
sed -i 's/^SELINUX=enforcing$/SELINUX=disabled/' /etc/selinux/config

___________________________________________________________

6. iptables config;

modprobe br_netfilter

cat <<EOF > /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
EOF
sysctl --system
___________________________________________________________


***********init 6******************

___________________________________________________________

7. Installing kubelet kubectl kubeadm:

cat <<EOF > /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
enabled=1
gpgcheck=1
repo_gpgcheck=1
gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
EOF

yum update -y

yum install -y kubelet kubeadm kubectl --disableexcludes=kubernetes

yum update -y

systemctl enable --now kubelet
systemctl enable docker
systemctl enable kubelet
systemctl status kubelet

___________________________________________________________

8.
kubeadm config images pull

kubeadm init --pod-network-cidr=192.168.0.0/16 --apiserver-advertise-address=10.10.10.100

___________________________________________________________

9.
root user:
export KUBECONFIG=/etc/kubernetes/admin.conf

To make kubectl work for your non-root user, run these commands, which are also part of the kubeadm init output:

mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config

___________________________________________________________

10.
copy the join command and keep it:
kubeadm join 10.10.10.100:6443 --token 31q14b.jvv4p8qgd8evm4j5 \
    --discovery-token-ca-cert-hash sha256:75eae59405c081d6f598aaae4ae06204e15c7715b258e41f419297ac851ab4e5
___________________________________________________________

11.
on master before joining worker:
kubectl apply -f https://docs.projectcalico.org/v3.11/manifests/calico.yaml

___________________________________________________________

12.
kubectl get pods --all-namespaces
make sure all status is running
___________________________________________________________

13.
paste the join command on workers
kubeadm join 10.10.10.100:6443 --token 31q14b.jvv4p8qgd8evm4j5 \
    --discovery-token-ca-cert-hash sha256:75eae59405c081d6f598aaae4ae06204e15c7715b258e41f419297ac851ab4e5
